1 - Corrigir a forma que se busca dados. Atualmente está buscando bloco por bloco
mas o algoritmo deve buscar usando o "hash" / "prev_hash", para checar
se o dado existe e retorná-lo. Isso deve ser feito somente para busca de dados.
Para a rota de "chain" pode continuar do jeito que está. - DONE

2 - Talvez criar um novo projeto chamado "Blockchain DB" com a estrutura limpa.
- Sem senha. Senha nao faz sentido já que sao dados publicos
- Mas faz sentido criar conta para poder fazer transacoes
- - Nesse caso, as transacoes precisam de um "from" ou "by" (account_id)

3 - Salvar cada bloco num arquivo .json / .dat (no formato json). O nome
deve ser o "hash" do bloco. Desta forma, ao buscar um dado, tudo estará
persistido além da memória.

4 - Criar sistema para faucet de kib coins
4.1 - Criar sistema de Wallet para ver os units (kibi coins) do usuário e
histórico de transações.

5 - Fazer cobrança por transação (busca) ou bytes usados (no caso de envio
de dados / persistencia)

6 - Apenas TESTNET por enquanto

7 - Usuario (login): deve ser uma combinação(hash) de "account_id" + "hash(password)".
Assim, deve-se salvar na chain um HashMap na tx_type ACCOUNT, algo como:
{
  "hash-da-combinacao": {
    account_id: "wendersonpires.kibi",
    units: 1000000000, // Isso aqui é o Kibi Coins (podem ser transferidos e usado na leitura / escrita)    
  }
}

Desta forma, quando eu fizer o login com ID da Conta + Senha, a chain vai apenas pesquisar
para ver se acha o hash da combinação. Se achar, logo o usuário está logado (existe).

8 - Transação de DB Contratos tem que ter o registro do account_id que o fez.

8.1 - Uma transação para um DB Contrato específico pode ser recusado no caso
de ter uma lógica dentro do contrato onde tem um whitelist de accounts permitidos.

9 - O mais louco é que será possível hospedar até websites dentro da chain. Aqui
se mostra importante a cobrança para guardar dados (mais caro) e ler dados (mais barato).

10 - Montar servidor no raspberry e deixar disponível no mundo usando serviço de DNS ou
abrindo a porta do roteador.