# This workflow is used to build the chain-db binary for all supported platforms.
# It is triggered by a release event.
# The binary is then uploaded as an asset to the release.

name: Build and Test

on:
  # push:
  #   branches: [ main ]
  release:
    types: [created]

# Add explicit permissions for the GITHUB_TOKEN
permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --verbose

  build-linux-x86_64:
    name: Build Linux (x86_64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu
      
      - name: Rename binary for release
        run: |
          mkdir -p release-assets
          cp target/x86_64-unknown-linux-gnu/release/chain-db release-assets/chain-db-linux-amd64
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: release-assets/chain-db-linux-amd64
          token: ${{ secrets.GITHUB_TOKEN }}

  build-linux-arm64:
    name: Build Linux (ARM64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu
      
      - name: Install cross
        run: cargo install cross
      
      - name: Build
        run: cross build --release --target aarch64-unknown-linux-gnu
      
      - name: Rename binary for release
        run: |
          mkdir -p release-assets
          cp target/aarch64-unknown-linux-gnu/release/chain-db release-assets/chain-db-linux-arm64
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: release-assets/chain-db-linux-arm64
          token: ${{ secrets.GITHUB_TOKEN }}

  build-linux-armv7:
    name: Build Linux (ARMv7)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: armv7-unknown-linux-gnueabihf
      
      - name: Install cross
        run: cargo install cross
      
      - name: Build
        run: cross build --release --target armv7-unknown-linux-gnueabihf
      
      - name: Rename binary for release
        run: |
          mkdir -p release-assets
          cp target/armv7-unknown-linux-gnueabihf/release/chain-db release-assets/chain-db-linux-armv7
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: release-assets/chain-db-linux-armv7
          token: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc
      
      - name: Rename binary for release
        run: |
          mkdir -p release-assets
          cp target/x86_64-pc-windows-msvc/release/chain-db.exe release-assets/chain-db-windows-amd64.exe
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: release-assets/chain-db-windows-amd64.exe
          token: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin
      
      - name: Build
        run: cargo build --release --target x86_64-apple-darwin
      
      - name: Rename binary for release
        run: |
          mkdir -p release-assets
          cp target/x86_64-apple-darwin/release/chain-db release-assets/chain-db-macos-amd64
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: release-assets/chain-db-macos-amd64
          token: ${{ secrets.GITHUB_TOKEN }} 