name: Build and Test

on:
  # push:
  #   branches: [ main ]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --verbose

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: chain-db
            asset_name: chain-db-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: chain-db
            asset_name: chain-db-linux-arm64
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            artifact_name: chain-db
            asset_name: chain-db-linux-armv7
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: chain-db.exe
            asset_name: chain-db-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: chain-db
            asset_name: chain-db-macos-amd64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install cross-compilation tools
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }} 
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 